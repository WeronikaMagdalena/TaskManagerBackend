spring:

# DATABASE

  application:
    name: Task Manager
  datasource:
    url: jdbc:postgresql://task-manager-db.c5wkqwu2q57g.us-east-1.rds.amazonaws.com/postgres
    username: wera
    password: password
    driver-class-name: org.postgresql.Driver

  h2:
    console:
      enabled: true
  jpa:
    hibernate:
      ddl-auto: none
      dialect: PostgresSQLDialect
    show-sql: true
    properties:
      hibernate:
        format_sql: true

# COGNITO

# TODO
  security:
    oauth2:
      client:
        registration:
          cognito:
            # TODO
            user-pool-id: us-east-1_Ki3JwOkPh
            client-id: 1ljb2oeikdk3kc9ia1k9ecckqa
            token-uri: https://cognito-idp.us-east-1.amazonaws.com/us-east-1_WQcDEQIge/.well-known/jwks.json
            scope: openid, profile, email
            client-authentication-method: post
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:3000/login/oauth2/code/cognito
        provider:
          cognito:
            issuerUri: https://cognito-idp.us-east-1.amazonaws.com/us-east-1_WQcDEQIge
            user-name-attribute: username
#            authorization-uri: https://<user-pool-domain>.auth.<region>.amazoncognito.com/oauth2/authorize
#            token-uri: https://<user-pool-domain>.auth.<region>.amazoncognito.com/oauth2/token
#            jwk-set-uri: https://cognito-idp.<region>.amazonaws.com/<user-pool-id>/.well-known/jwks.json
#            user-info-uri: https://<user-pool-domain>.auth.<region>.amazoncognito.com/oauth2/userInfo



#  security:
#    oauth2:
#      client:
#        registration:
#          cognito:
#            client-id: 16o4fuqp5o5gdrrmds9255flp1
##            client-secret: <client secret>
#            scope: email openid profile
#            redirect-uri: http://localhost:3000/callback
#        provider:
#          cognito:
#            issuerUri: https://cognito-idp.us-east-1.amazonaws.com/us-east-1_Jnx1IADkh
#            user-name-attribute: username

